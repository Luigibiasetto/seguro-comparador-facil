
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://flrdluhakpnuffozgcne.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZscmRsdWhha3BudWZmb3pnY25lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxNzU4NzYsImV4cCI6MjA1Nzc1MTg3Nn0.ubOjmQYt8c3KQXCwbJLct42cEovQvw0S3TYTUROwENs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Configurações adicionais para melhorar a confiabilidade da conexão
const options = {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  global: {
    headers: {
      'X-Client-Info': 'supabase-js-web/2.49.1'
    }
  }
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, options);

// Função auxiliar para verificar status de conexão sem depender de tabelas específicas
export const checkSupabaseConnection = async () => {
  try {
    // Usar o método de autenticação para verificar a conexão,
    // que não depende de tabelas específicas
    const { error } = await supabase.auth.getSession();
    
    if (error) {
      console.warn("Teste de conexão com Supabase falhou:", error);
      return {
        connected: false,
        error: error
      };
    }
    
    return {
      connected: true
    };
  } catch (error) {
    console.error("Erro ao testar conexão:", error);
    return {
      connected: false,
      error: error
    };
  }
};
